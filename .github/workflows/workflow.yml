name: CI/CD Pipeline for Coffee API Service

on:
  push:
    branches:
      - env/staging
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: ghcr.io/cofeeapikryvobok/coffee-api:latest
      KUBECONFIG: /home/runner/.kube/config

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to GitHub Container Registry
      - name: Login to GitHub Packages
        run: echo "${{ secrets.MY_GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Build and Tag Docker Image
      - name: Build Docker image
        run: docker build -t $DOCKER_IMAGE .

      # Push Docker Image to GitHub Packages
      - name: Push Docker image
        run: docker push $DOCKER_IMAGE

      # Setup Minikube
      - name: Set up Minikube
        run: minikube start --driver=docker

      # Set up kubectl and Helm
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.23.0

      - name: Install Helm
        uses: azure/setup-helm@v3

      # Create Kubernetes secret
      - name: Create Docker registry secret
        run: |
          kubectl create secret docker-registry regcred \
            --docker-server=ghcr.io \
            --docker-username="cofeeapikryvobok" \
            --docker-password=${{ secrets.MY_GITHUB_TOKEN }} \
            --docker-email=${{ github.actor }}@users.noreply.github.com

      # Deploy using Helm
      - name: Deploy Coffee API using Helm
        run: |
          helm upgrade --install coffee-api ./coffee-api-chart \
            --set image.repository=ghcr.io/cofeeapikryvobok/coffee-api \
            --set image.tag=latest \
            --set imagePullSecrets[0].name=regcred \
            --wait --timeout 60s || exit 1

      # Sleep to give the application time to initialize
      - name: Sleep for 2 minutes to allow the application to start
        run: sleep 120

      # Test the health of the Coffee API
      - name: Test Coffee API Health Endpoint
        run: |
          until curl --silent --fail http://coffee-api-service/api/health; do
            echo "Waiting for the Coffee API to be ready..."
            sleep 10
          done
          echo "Coffee API is up and running."

      # Test the POST /order endpoint
      - name: Test Coffee API Order Endpoint
        run: |
          curl -X POST http://coffee-api-service/order -H "Content-Type: application/json" -d '{"payment": 2.5}' 

      # Get pod logs if deployment fails
      - name: Get pod logs on failure
        if: failure()
        run: |
          echo "Deployment failed. Gathering logs..."
          kubectl get pods --selector=app=coffee-api
          kubectl describe pods
          POD_NAME=$(kubectl get pods --selector=app=coffee-api -o jsonpath='{.items[0].metadata.name}')
          echo "Fetching logs for pod: $POD_NAME"
          kubectl logs $POD_NAME || echo "No logs available for pod $POD_NAME"
